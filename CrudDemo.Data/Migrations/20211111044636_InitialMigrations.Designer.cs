// <auto-generated />
using System;
using CrudDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrudDemo.Data.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20211111044636_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrudDemo.Data.Models.DepartmentEntity", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentCode");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentCode = "IT",
                            Name = "Information Technology"
                        },
                        new
                        {
                            DepartmentCode = "SALES",
                            Name = "Sales"
                        },
                        new
                        {
                            DepartmentCode = "AD",
                            Name = "Advertising"
                        },
                        new
                        {
                            DepartmentCode = "SUP",
                            Name = "Tech Support"
                        });
                });

            modelBuilder.Entity("CrudDemo.Data.Models.EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CrudDemo.Data.Models.ProjectEntity", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("EmployeeEntityProjectEntity", b =>
                {
                    b.Property<Guid>("Ref_EmployeesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Ref_ProjectsCreatedProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Ref_EmployeesId", "Ref_ProjectsCreatedProjectId");

                    b.HasIndex("Ref_ProjectsCreatedProjectId");

                    b.ToTable("EmployeeEntityProjectEntity");
                });

            modelBuilder.Entity("CrudDemo.Data.Models.EmployeeEntity", b =>
                {
                    b.HasOne("CrudDemo.Data.Models.DepartmentEntity", "Ref_Department")
                        .WithMany("Ref_ManyEmployees")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ref_Department");
                });

            modelBuilder.Entity("EmployeeEntityProjectEntity", b =>
                {
                    b.HasOne("CrudDemo.Data.Models.EmployeeEntity", null)
                        .WithMany()
                        .HasForeignKey("Ref_EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CrudDemo.Data.Models.ProjectEntity", null)
                        .WithMany()
                        .HasForeignKey("Ref_ProjectsCreatedProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrudDemo.Data.Models.DepartmentEntity", b =>
                {
                    b.Navigation("Ref_ManyEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
